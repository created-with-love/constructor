{"version":3,"sources":["utils.js","classes/blocks.js","model.js","classes/site.js","classes/sidebar.js","classes/app.js","index.js"],"names":["row","content","styles","col","toCss","Object","keys","map","key","join","block","type","Block","value","options","Error","TitleBlock","tag","ImageBlock","is","imageStyles","alt","ColumnsBlock","html","TextBlock","text","model","background","color","padding","image","display","width","height","Site","selector","$el","document","querySelector","innerHTML","forEach","insertAdjacentHTML","toHTML","Sidebar","updateCallback","update","init","template","addEventListener","add","bind","event","preventDefault","target","name","newBlock","App","site","render","push"],"mappings":"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","file":"src.f33ec7c4.js","sourceRoot":"..\\src","sourcesContent":["// две вспомогательные функции для файла templates.js, которые уменьшают дублирование кода и\r\n// делают функции по созданию html-кода куда более деликатными\r\nexport function row(content, styles = '') {\r\n  return `<div class='row' style=\"${styles}\">${content}</div>`;\r\n}\r\nexport function col(content) {\r\n  return `<div class='col-sm'>${content}</div>`;\r\n}\r\n\r\n// функция перебирает свойства обьекта и отдает вместо обьекта строку ключ-значение\r\nexport function toCss(styles = {}) {\r\n  if (typeof styles === 'string') {\r\n    return styles;\r\n  }\r\n  // const keys = Object.keys(styles);\r\n  // const newArray = keys.map(key => {\r\n  //   return `${key}: ${styles[key]}`;\r\n  // });\r\n  // return newArray.join(';');\r\n\r\n  // сокращаю код выше:\r\n  const toString = key => `${key}: ${styles[key]}`;\r\n  return Object.keys(styles).map(toString).join(';');\r\n}\r\n\r\nexport function block(type) {\r\n  return `\r\n    <form name=\"${type}\">\r\n      <h5>${type}</h5>\r\n      <div class=\"form-group\">\r\n        <input class=\"form-control form-control-sm\" name=\"value\" placeholder=\"value\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input class=\"form-control form-control-sm\" name=\"styles\" placeholder=\"styles\">\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary btn-sm\">Добавить</button>\r\n    </form>\r\n    <hr />\r\n  `;\r\n}\r\n","import { row, col, toCss } from '../utils';\r\n// класс для создания однотипных обьектов в массиве данных model\r\nclass Block {\r\n  constructor(value, options) {\r\n    this.value = value;\r\n    this.options = options;\r\n  }\r\n\r\n  //   если в каком-то из наследуемых классов не будет метода toHTML, то возникнет ошибка\r\n  toHTML() {\r\n    throw new Error('Метод toHTML должен быть реализован');\r\n  }\r\n}\r\n\r\n// Отдельные классы для каждого подвида обьекта в массиве modul (на основе type Обьекта)\r\nexport class TitleBlock extends Block {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n\r\n  toHTML() {\r\n    const { tag = 'h1', styles } = this.options;\r\n    return row(col(`<${tag}>${this.value}</${tag}>`), toCss(styles));\r\n  }\r\n}\r\n\r\nexport class ImageBlock extends Block {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n\r\n  toHTML() {\r\n    const { styles, imageStyles: is, alt = '' } = this.options;\r\n    return row(\r\n      `<img src=\"${this.value}\" alt=\"${alt}\" style=\"${toCss(is)}\">`,\r\n      toCss(styles),\r\n    );\r\n  }\r\n}\r\n\r\nexport class ColumnsBlock extends Block {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n\r\n  toHTML() {\r\n    const { styles } = this.options;\r\n    const html = this.value.map(col).join('');\r\n    return row(html, toCss(styles));\r\n  }\r\n}\r\n\r\nexport class TextBlock extends Block {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n\r\n  toHTML() {\r\n    const { styles } = this.options;\r\n    return row(col(`<p> ${this.value} </p>`), toCss(styles));\r\n  }\r\n}\r\n","import image from './assets/image.jpg';\r\nimport {\r\n  TextBlock,\r\n  TitleBlock,\r\n  ImageBlock,\r\n  ColumnsBlock,\r\n} from './classes/blocks';\r\n\r\nconst text =\r\n  'Весь текст генерируется автоматически с помощью JavaScript и вставляется в HTML при помощи insertAdjacentHTML';\r\n\r\nexport const model = [\r\n  new TitleBlock('Конструктор сайтов на JavaScript', {\r\n    tag: 'h2',\r\n    // styles: `background: linear-gradient(to right, #ff0099, #493240); color: #fff; text-align: center; padding: 1.5rem`,\r\n    // Спобос описание стилей не встроку, а с помощью обьекта выглядит лаконичнее и понятнее\r\n    styles: {\r\n      background: 'linear-gradient(to right, #ff0099, #493240)',\r\n      color: '#fff',\r\n      'text-align': 'center',\r\n      padding: '1.5rem',\r\n    },\r\n  }),\r\n  new ImageBlock(image, {\r\n    styles: {\r\n      padding: '2rem 0',\r\n      display: 'flex',\r\n      'justify-content': 'center',\r\n    },\r\n    imageStyles: {\r\n      width: '700px',\r\n      height: 'auto',\r\n    },\r\n    alt: 'Это картинка',\r\n  }),\r\n  new ColumnsBlock(\r\n    [\r\n      'Приложение на чистом JavaScript, без использования библиотек',\r\n      'Создано по принципам SOLID и ООП',\r\n      'Сборщиком выступает на проекте Parcel - простой, быстрый и удобный bundler',\r\n    ],\r\n    {\r\n      styles: {\r\n        background: 'linear-gradient(to bottom, #8e2de2, #4a00e0)',\r\n        padding: '2rem',\r\n        color: '#fff',\r\n        'font-weight': 'bold',\r\n      },\r\n    },\r\n  ),\r\n  new TextBlock(text, {\r\n    styles: {\r\n      background: 'linear-gradient(to left, #f2994a, #f2c94c)',\r\n      padding: '1rem',\r\n      'font-weight': 'bold',\r\n    },\r\n  }),\r\n];\r\n","export class Site {\r\n  constructor(selector) {\r\n    this.$el = document.querySelector(selector);\r\n  }\r\n\r\n  render(model) {\r\n    this.$el.innerHTML = '';\r\n    model.forEach(block => {\r\n      //перебирает каждый обьект и запускает его фукнцию toHTML, которая создается в прототим классом (blocks.js)\r\n      this.$el.insertAdjacentHTML('beforeend', block.toHTML());\r\n    });\r\n  }\r\n}\r\n","import { block } from '../utils.js';\r\nimport { TextBlock, TitleBlock } from './blocks.js';\r\n\r\nexport class Sidebar {\r\n  constructor(selector, updateCallback) {\r\n    //   помечать значком доллара спереди принято те переменные, которые берут значение с ДОМ-дерева\r\n    this.$el = document.querySelector(selector);\r\n    this.update = updateCallback;\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.$el.insertAdjacentHTML('afterbegin', this.template);\r\n    this.$el.addEventListener('submit', this.add.bind(this));\r\n  }\r\n\r\n  get template() {\r\n    return [block('text'), block('title')].join('');\r\n  }\r\n\r\n  add(event) {\r\n    event.preventDefault();\r\n    // узнает какой тип блока заполнен\r\n    const type = event.target.name;\r\n\r\n    // получает значение текста, который введен в первый интуп блока\r\n    const value = event.target.value.value;\r\n\r\n    // получает значение с инпута styles\r\n    const styles = event.target.styles.value;\r\n\r\n    let newBlock =\r\n      type === 'text'\r\n        ? (newBlock = new TextBlock(value, { styles }))\r\n        : (newBlock = new TitleBlock(value, { styles }));\r\n    //   else if (type === 'title') {}\r\n\r\n    this.update(newBlock);\r\n\r\n    event.target.value.value = '';\r\n\r\n    event.target.styles.value = '';\r\n  }\r\n}\r\n","import { Site } from './site';\r\nimport { Sidebar } from './sidebar';\r\n\r\nexport class App {\r\n  constructor(model) {\r\n    this.model = model;\r\n\r\n    // автоматически вызывает фунцию init при инициализации класса\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    const site = new Site('#site');\r\n\r\n    site.render(this.model);\r\n\r\n    const updateCallback = newBlock => {\r\n      this.model.push(newBlock);\r\n      site.render(this.model);\r\n    };\r\n\r\n    new Sidebar('#panel', updateCallback);\r\n  }\r\n}\r\n","import { model } from './model.js';\r\nimport './styles/main.css';\r\nimport { App } from './classes/app.js';\r\n\r\n// инициализирует класс App, в котором автоматически запускается функция init (app.js)\r\nnew App(model);\r\n"]}